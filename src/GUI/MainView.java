/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.InputMethodListener;
import java.awt.event.ItemListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import javax.mail.internet.AddressException;
import javax.mail.internet.InternetAddress;
import javax.swing.AbstractButton;
import javax.swing.BorderFactory;
import javax.swing.InputVerifier;
import javax.swing.JButton;
import javax.swing.JComponent;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTabbedPane;
import javax.swing.JTextField;
import javax.swing.plaf.basic.BasicButtonUI;

/**
 *
 * @author Supri
 */
public class MainView extends javax.swing.JFrame {

    /**
     * Creates new form CustomerProfileView
     */
    public MainView() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainTabbedPane = new javax.swing.JTabbedPane();
        customerProfilePane = new javax.swing.JPanel();
        custProfilePane = new javax.swing.JPanel();
        profileCustNumLabel = new javax.swing.JLabel();
        profileCustNumTextField = new javax.swing.JTextField();
        schoolLabel = new javax.swing.JLabel();
        schoolComboBox = new javax.swing.JComboBox();
        profileAddressLabel = new javax.swing.JLabel();
        profileAddressTextField = new javax.swing.JTextField();
        profileCityLabel = new javax.swing.JLabel();
        profileCityTextField = new javax.swing.JTextField();
        profileStateLabel = new javax.swing.JLabel();
        profileStateTextField = new javax.swing.JTextField();
        profileCountryLabel = new javax.swing.JLabel();
        profileCountryTextField = new javax.swing.JTextField();
        profilePostalCodeLabel = new javax.swing.JLabel();
        profilePostalCodeTextField = new javax.swing.JTextField();
        schoolDistrictLabel = new javax.swing.JLabel();
        schoolDistrictTextField = new javax.swing.JTextField();
        profilePhoneLabel = new javax.swing.JLabel();
        profilePhoneTextField = new javax.swing.JTextField();
        profileFaxLabel = new javax.swing.JLabel();
        profileFaxTextField = new javax.swing.JTextField();
        billingPane = new javax.swing.JPanel();
        billingBillToLabel = new javax.swing.JLabel();
        billingBillToTextField = new javax.swing.JTextField();
        billingCustNumberLabel = new javax.swing.JLabel();
        billingCustNumberTextField = new javax.swing.JTextField();
        billingAddressLabel = new javax.swing.JLabel();
        billingAddressTextField = new javax.swing.JTextField();
        billingCityLabel = new javax.swing.JLabel();
        billingCityTextField = new javax.swing.JTextField();
        billingStateLabel = new javax.swing.JLabel();
        billingStateTextField = new javax.swing.JTextField();
        billingCountryLabel = new javax.swing.JLabel();
        billingCountryTextField = new javax.swing.JTextField();
        billingPostalCodeLabel = new javax.swing.JLabel();
        billingPostalCodeTextField = new javax.swing.JTextField();
        billingEqualProfileCbox = new javax.swing.JCheckBox();
        profileViewSeparator = new javax.swing.JSeparator();
        orderHistoryPane = new javax.swing.JPanel();
        historyScrollPane = new javax.swing.JScrollPane();
        historyOrderTable = new javax.swing.JTable();
        historyViewPOButton = new javax.swing.JButton();
        historyCreatePOButton = new javax.swing.JButton();
        historyCopyPOButton = new javax.swing.JButton();
        addOrderPane = new javax.swing.JPanel();
        jMenuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        editMenu = new javax.swing.JMenu();
        viewMenu = new javax.swing.JMenu();
        helpMenu = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(240, 240, 240));
        setPreferredSize(new java.awt.Dimension(1122, 635));

        mainTabbedPane.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                mainTabbedPaneStateChanged(evt);
            }
        });

        customerProfilePane.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        customerProfilePane.setToolTipText("");
        customerProfilePane.setPreferredSize(new java.awt.Dimension(1085, 500));

        custProfilePane.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "C u s t o m e r   A c c o u n t", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Futura", 0, 14))); // NOI18N

        profileCustNumLabel.setLabelFor(profileCustNumTextField);
        profileCustNumLabel.setText("Customer #:");

        profileCustNumTextField.setEditable(false);
        profileCustNumTextField.setBackground(new java.awt.Color(222, 222, 222));

        schoolLabel.setLabelFor(schoolComboBox);
        schoolLabel.setText("Select School:");

        schoolComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<Select School>", "Point Grey Secondary School", "Britannia Secondary School", "Lord Byng Secondary School", "Sir Winston Churchill Secondary School", "Crofton House School", "David Thompson Secondary School", "Eric Hamber Secondary School", "Gladstone Secondary School", "John Oliver Secondary School", "King David High School", "Kitsilano Secondary School", "David Thompson Secondary School", "Little Flower Academy", "Magee Secondary School", "Notre Dame Regional Secondary School", "Prince of Wales Secondary School", "St. George's School", "St. John's School", "Sir Charles Tupper Secondary School", "Stratford Hall", "Templeton Secondary School\"", "University Hill Secondary School", "York House School", "West Point Grey Academy", "Windermere Secondary School" }));

        profileAddressLabel.setLabelFor(profileAddressTextField);
        profileAddressLabel.setText("Address:");

        profileAddressTextField.setEditable(false);
        profileAddressTextField.setBackground(new java.awt.Color(222, 222, 222));

        profileCityLabel.setLabelFor(profileCityTextField);
        profileCityLabel.setText("City:");

        profileCityTextField.setEditable(false);
        profileCityTextField.setBackground(new java.awt.Color(222, 222, 222));

        profileStateLabel.setLabelFor(profileStateTextField);
        profileStateLabel.setText("State/Province:");

        profileStateTextField.setEditable(false);
        profileStateTextField.setBackground(new java.awt.Color(222, 222, 222));

        profileCountryLabel.setLabelFor(profileCountryTextField);
        profileCountryLabel.setText("Country:");

        profileCountryTextField.setEditable(false);
        profileCountryTextField.setBackground(new java.awt.Color(222, 222, 222));

        profilePostalCodeLabel.setLabelFor(profilePostalCodeTextField);
        profilePostalCodeLabel.setText("Postal Code:");

        profilePostalCodeTextField.setEditable(false);
        profilePostalCodeTextField.setBackground(new java.awt.Color(222, 222, 222));
        profilePostalCodeTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        schoolDistrictLabel.setLabelFor(schoolDistrictTextField);
        schoolDistrictLabel.setText("School District: ");

        schoolDistrictTextField.setEditable(false);
        schoolDistrictTextField.setBackground(new java.awt.Color(222, 222, 222));

        profilePhoneLabel.setLabelFor(profilePhoneTextField);
        profilePhoneLabel.setText("Phone:");

        profilePhoneTextField.setEditable(false);
        profilePhoneTextField.setBackground(new java.awt.Color(222, 222, 222));

        profileFaxLabel.setLabelFor(profileFaxTextField);
        profileFaxLabel.setText("Fax:");

        profileFaxTextField.setEditable(false);
        profileFaxTextField.setBackground(new java.awt.Color(222, 222, 222));

        org.jdesktop.layout.GroupLayout custProfilePaneLayout = new org.jdesktop.layout.GroupLayout(custProfilePane);
        custProfilePane.setLayout(custProfilePaneLayout);
        custProfilePaneLayout.setHorizontalGroup(
            custProfilePaneLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(custProfilePaneLayout.createSequentialGroup()
                .add(10, 10, 10)
                .add(custProfilePaneLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(profileCityLabel)
                    .add(schoolLabel)
                    .add(profileAddressLabel)
                    .add(profileCustNumLabel)
                    .add(profileCountryLabel)
                    .add(profilePhoneLabel)
                    .add(schoolDistrictLabel))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(custProfilePaneLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(custProfilePaneLayout.createSequentialGroup()
                        .add(custProfilePaneLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(profileCustNumTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(schoolComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 275, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(schoolDistrictTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 179, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(0, 0, Short.MAX_VALUE))
                    .add(custProfilePaneLayout.createSequentialGroup()
                        .add(custProfilePaneLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, custProfilePaneLayout.createSequentialGroup()
                                .add(custProfilePaneLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(custProfilePaneLayout.createSequentialGroup()
                                        .add(profilePhoneTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 123, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .add(30, 30, 30)
                                        .add(profileFaxLabel))
                                    .add(custProfilePaneLayout.createSequentialGroup()
                                        .add(profileCountryTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 123, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .add(30, 30, 30)
                                        .add(profilePostalCodeLabel))
                                    .add(custProfilePaneLayout.createSequentialGroup()
                                        .add(profileCityTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 123, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .add(30, 30, 30)
                                        .add(profileStateLabel)))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(custProfilePaneLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(profileFaxTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 123, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(profilePostalCodeTextField)
                                    .add(profileStateTextField)))
                            .add(profileAddressTextField))
                        .add(10, 10, 10))))
        );
        custProfilePaneLayout.setVerticalGroup(
            custProfilePaneLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, custProfilePaneLayout.createSequentialGroup()
                .add(15, 15, 15)
                .add(custProfilePaneLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(profileCustNumLabel)
                    .add(profileCustNumTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(custProfilePaneLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(schoolComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(schoolLabel))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(custProfilePaneLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(profileAddressLabel)
                    .add(profileAddressTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(custProfilePaneLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(profileCityLabel)
                    .add(profileCityTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(profileStateLabel)
                    .add(profileStateTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(custProfilePaneLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(profileCountryLabel)
                    .add(profileCountryTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(profilePostalCodeLabel)
                    .add(profilePostalCodeTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(custProfilePaneLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(schoolDistrictLabel)
                    .add(schoolDistrictTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(custProfilePaneLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(profilePhoneLabel)
                    .add(profilePhoneTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(profileFaxLabel)
                    .add(profileFaxTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(15, 15, 15))
        );

        billingPane.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "B i l l i n g   I n f o r m a t i o n", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Futura", 0, 14))); // NOI18N

        billingBillToLabel.setLabelFor(billingBillToTextField);
        billingBillToLabel.setText("Bill to:");

        billingCustNumberLabel.setLabelFor(billingCustNumberTextField);
        billingCustNumberLabel.setText("Customer #:");

        billingAddressLabel.setLabelFor(billingAddressTextField);
        billingAddressLabel.setText("Address:");

        billingCityLabel.setLabelFor(billingCityTextField);
        billingCityLabel.setText("City:");

        billingStateLabel.setLabelFor(billingStateTextField);
        billingStateLabel.setText("State/Province:");

        billingCountryLabel.setLabelFor(billingCountryTextField);
        billingCountryLabel.setText("Country:");

        billingPostalCodeLabel.setLabelFor(billingPostalCodeTextField);
        billingPostalCodeLabel.setText("Postal Code:");

        billingPostalCodeTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        billingEqualProfileCbox.setText("Same as customer profile");

        org.jdesktop.layout.GroupLayout billingPaneLayout = new org.jdesktop.layout.GroupLayout(billingPane);
        billingPane.setLayout(billingPaneLayout);
        billingPaneLayout.setHorizontalGroup(
            billingPaneLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(billingPaneLayout.createSequentialGroup()
                .add(10, 10, 10)
                .add(billingPaneLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(billingEqualProfileCbox)
                    .add(billingPaneLayout.createSequentialGroup()
                        .add(billingPaneLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(billingAddressLabel)
                            .add(billingCustNumberLabel)
                            .add(billingBillToLabel)
                            .add(billingCountryLabel)
                            .add(billingCityLabel))
                        .add(1, 1, 1)
                        .add(billingPaneLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(billingBillToTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 275, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(billingCustNumberTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, billingPaneLayout.createSequentialGroup()
                                .add(billingCountryTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 123, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(30, 30, 30)
                                .add(billingPostalCodeLabel)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(billingPostalCodeTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 123, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, billingPaneLayout.createSequentialGroup()
                                .add(billingCityTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 123, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(30, 30, 30)
                                .add(billingStateLabel)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(billingStateTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 123, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(billingAddressTextField))))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        billingPaneLayout.setVerticalGroup(
            billingPaneLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(billingPaneLayout.createSequentialGroup()
                .add(15, 15, 15)
                .add(billingPaneLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(billingBillToLabel)
                    .add(billingBillToTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(5, 5, 5)
                .add(billingPaneLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(billingCustNumberLabel)
                    .add(billingCustNumberTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(billingPaneLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(billingAddressLabel)
                    .add(billingAddressTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(billingPaneLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(billingCityLabel)
                    .add(billingCityTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(billingStateLabel)
                    .add(billingStateTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(billingPaneLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(billingCountryLabel)
                    .add(billingCountryTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(billingPostalCodeLabel)
                    .add(billingPostalCodeTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(billingEqualProfileCbox)
                .add(15, 15, 15))
        );

        orderHistoryPane.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "O r d e r   H i s t o r y", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Futura", 0, 14))); // NOI18N

        historyOrderTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "P.O. Number", "P.O. Date", "Amount", "Payment Due Date", "Payment Date", "Sales Consultant"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        historyOrderTable.setColumnSelectionAllowed(true);
        historyScrollPane.setViewportView(historyOrderTable);
        historyOrderTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        historyViewPOButton.setLabel("View P.O.");

        historyCreatePOButton.setLabel("Create P.O.");

        historyCopyPOButton.setLabel("Copy P.O.");

        org.jdesktop.layout.GroupLayout orderHistoryPaneLayout = new org.jdesktop.layout.GroupLayout(orderHistoryPane);
        orderHistoryPane.setLayout(orderHistoryPaneLayout);
        orderHistoryPaneLayout.setHorizontalGroup(
            orderHistoryPaneLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(orderHistoryPaneLayout.createSequentialGroup()
                .add(20, 20, 20)
                .add(historyScrollPane)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(orderHistoryPaneLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(historyViewPOButton)
                    .add(historyCreatePOButton)
                    .add(historyCopyPOButton))
                .add(19, 19, 19))
        );

        orderHistoryPaneLayout.linkSize(new java.awt.Component[] {historyCopyPOButton, historyCreatePOButton, historyViewPOButton}, org.jdesktop.layout.GroupLayout.HORIZONTAL);

        orderHistoryPaneLayout.setVerticalGroup(
            orderHistoryPaneLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, orderHistoryPaneLayout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .add(historyScrollPane, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 179, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
            .add(orderHistoryPaneLayout.createSequentialGroup()
                .add(50, 50, 50)
                .add(historyViewPOButton)
                .add(18, 18, 18)
                .add(historyCreatePOButton)
                .add(18, 18, 18)
                .add(historyCopyPOButton)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout customerProfilePaneLayout = new org.jdesktop.layout.GroupLayout(customerProfilePane);
        customerProfilePane.setLayout(customerProfilePaneLayout);
        customerProfilePaneLayout.setHorizontalGroup(
            customerProfilePaneLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(customerProfilePaneLayout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .add(customerProfilePaneLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                    .add(orderHistoryPane, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, profileViewSeparator)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, customerProfilePaneLayout.createSequentialGroup()
                        .add(custProfilePane, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(30, 30, 30)
                        .add(billingPane, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        customerProfilePaneLayout.setVerticalGroup(
            customerProfilePaneLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(customerProfilePaneLayout.createSequentialGroup()
                .add(20, 20, 20)
                .add(customerProfilePaneLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(custProfilePane, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(billingPane, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .add(20, 20, 20)
                .add(profileViewSeparator, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(orderHistoryPane, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(15, 15, 15))
        );

        mainTabbedPane.addTab("Customer Profile", customerProfilePane);

        org.jdesktop.layout.GroupLayout addOrderPaneLayout = new org.jdesktop.layout.GroupLayout(addOrderPane);
        addOrderPane.setLayout(addOrderPaneLayout);
        addOrderPaneLayout.setHorizontalGroup(
            addOrderPaneLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 1085, Short.MAX_VALUE)
        );
        addOrderPaneLayout.setVerticalGroup(
            addOrderPaneLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 613, Short.MAX_VALUE)
        );

        mainTabbedPane.addTab("+", addOrderPane);

        fileMenu.setText("File");
        jMenuBar.add(fileMenu);

        editMenu.setText("Edit");
        jMenuBar.add(editMenu);

        viewMenu.setText("View");
        jMenuBar.add(viewMenu);

        helpMenu.setText("Help");
        jMenuBar.add(helpMenu);

        setJMenuBar(jMenuBar);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(10, 10, 10)
                .add(mainTabbedPane)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .add(10, 10, 10)
                .add(mainTabbedPane)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private String selectedProduct;

    private class ButtonTabComponent extends JPanel{
        private final JTabbedPane thePane;
        
        ButtonTabComponent(final JTabbedPane aPane){
            super(new FlowLayout(FlowLayout.LEFT, 0, 0));
            if (aPane == null) {
                throw new NullPointerException("TabbedPane is null");
            }
            thePane = aPane;
            setOpaque(false);
            
            JLabel label = new JLabel() {
                public String getText() {
                    int i = thePane.indexOfTabComponent(ButtonTabComponent.this);
                    if (i != -1) {
                        return thePane.getTitleAt(i);
                    }
                    return null;
                }
            };
            
            add(label);
            label.setBorder(BorderFactory.createEmptyBorder(0, 0, 0, 5));
            JButton button = new TabButton();
            add(button);
            setBorder(BorderFactory.createEmptyBorder(2, 0, 0, 0));
        }
        
        private class TabButton extends JButton implements ActionListener{

            public TabButton() {
                int size = 16;
                setPreferredSize(new Dimension(size,size));
                setUI(new BasicButtonUI());
                setContentAreaFilled(false);
                setFocusable(false);
                setBorder(BorderFactory.createEtchedBorder());
                setBorderPainted(false);
                addMouseListener(buttonMouseListener);
                setRolloverEnabled(true);
                addActionListener(this);
            }

            @Override
            public void actionPerformed(ActionEvent e) {
                int i = thePane.indexOfTabComponent(ButtonTabComponent.this);
                if (i != -1) {
                    thePane.setSelectedComponent(customerProfilePane);
                    thePane.remove(i);
                }
            }
            
            public void updateUI() {
            }

            
            protected void paintComponent(Graphics g) {
                super.paintComponent(g);
                Graphics2D g2 = (Graphics2D) g.create();
                if (getModel().isPressed()) {
                    g2.translate(1, 1);
                }
                g2.setStroke(new BasicStroke(2));
                g2.setColor(Color.BLACK);
                if (getModel().isRollover()) {
                    g2.setColor(Color.MAGENTA);
                }
                int delta = 6;
                g2.drawLine(delta, delta, getWidth() - delta - 1, getHeight() - delta - 1);
                g2.drawLine(getWidth() - delta - 1, delta, delta, getHeight() - delta - 1);
                g2.dispose();
            }
        }
        
        private final MouseListener buttonMouseListener = new MouseAdapter() {
            public void mouseEntered(MouseEvent e) {
                Component component = e.getComponent();
                if (component instanceof AbstractButton) {
                    AbstractButton button = (AbstractButton) component;
                    button.setBorderPainted(true);
                }
            }

            public void mouseExited(MouseEvent e) {
                Component component = e.getComponent();
                if (component instanceof AbstractButton) {
                    AbstractButton button = (AbstractButton) component;
                    button.setBorderPainted(false);
                }
            }
        };
    }
    
    private int count = 0;
    private void mainTabbedPaneStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_mainTabbedPaneStateChanged
        JTabbedPane tabSource = (JTabbedPane) evt.getSource();
        String tab = tabSource.getTitleAt(tabSource.getSelectedIndex());
        if(tab.equals("+")){
            Object[] productType = {"Agenda", "Fulfilment", "P2", "Versatile"};
            selectedProduct =   (String)JOptionPane.showInputDialog(addOrderPane, "Chooce the type of product do you want to order: ", 
                                "Choose Product Type", JOptionPane.PLAIN_MESSAGE, null, productType, "Agenda");
            if(selectedProduct.equals("Agenda")){
                count++;
                mainTabbedPane.add("Agenda " + count, new javax.swing.JPanel());
                mainTabbedPane.setTabComponentAt(mainTabbedPane.indexOfTab("Agenda " + count), new ButtonTabComponent(mainTabbedPane));
                mainTabbedPane.removeTabAt(tabSource.getSelectedIndex());
                mainTabbedPane.add("+", addOrderPane);
            }
        }
    }//GEN-LAST:event_mainTabbedPaneStateChanged

    
    /**
     * Methods related to Customer Profile Pane
     *  
     */
    public String getSchoolName(){
        return schoolComboBox.getSelectedItem().toString();
    }
    
    public String getProfileCustNumber(){
        return profileCustNumTextField.getText();
    }
    
    public String getProfileCountry(){
        return profileCountryTextField.getText();
    }
    
    public String getProfileStates(){
        return profileStateTextField.getText();
    }
    
    public String getProfileCity(){
        return profileCityTextField.getText();
    }
    
    public String getProfilePostalCode(){
        return profilePostalCodeTextField.getText();
    }
    
    public String getProfileAddress(){
        return profileAddressTextField.getText();
    }
    
    public String getProfilePhone(){
        return profilePhoneTextField.getText();
    }
    
    public String getSchoolDistrict(){
        return schoolDistrictTextField.getText();
    }
    
    public String getProfileFax(){
        return profileFaxTextField.getText();
    }

    public void setProfileCustNumber(String aNumber){
        profileCustNumTextField.setText(aNumber);
    }
    
    public void setProfileCountry(String aCountry){
        profileCountryTextField.setText(aCountry);
    }
    
    public void setProfileStates(String aState){
        profileStateTextField.setText(aState);
    }
    
    public void setProfileCity(String aCity){
        profileCityTextField.setText(aCity);
    }
    
    public void setProfilePostalCode(String aPostalCode){
        profilePostalCodeTextField.setText(aPostalCode);
    }
    
    public void setProfileAddress(String anAddress){
        profileAddressTextField.setText(anAddress);
    }
    
    public void setProfilePhone(String aPhoneNumber){
        profilePhoneTextField.setText(aPhoneNumber);
    }
    
    public void setProfileFax(String aFaxNumber){
        profileFaxTextField.setText(aFaxNumber);
    }
    
    public void setSchoolDistrict(String aSchoolDistrict){
        schoolDistrictTextField.setText(aSchoolDistrict);
    }
           
    public void addSchoolComboBoxListener(ItemListener listenSchoolComboBox){
        schoolComboBox.addItemListener(listenSchoolComboBox);
    }
   
  
    
    /**
     * Methods related to Billing Pane 
     */
    public String getBillTo(){
        return billingBillToTextField.getText();
    }
    
    public String getBillingCountry(){
        return billingCountryTextField.getText();
    }
    
    public String getBillingStates(){
        return billingStateTextField.getText();
    }
    
    public String getBillingCity(){
        return billingCityTextField.getText();
    }
    
    public String getBillingAddress(){
        return billingAddressTextField.getText();
    }
    
    public String getBillingPostalCode(){
        return billingPostalCodeTextField.getText();
    }
    
    public String getBillingCustNumber(){
        return billingCustNumberTextField.getText();
    }
    
    public boolean getValueBillingEqualProfileCheckBox(){
        
        Object[] bcb = billingEqualProfileCbox.getSelectedObjects();
        if(bcb == null)
            return false;
        else 
            return true;
    }
    
    public void setBillTo(String x){
        billingBillToTextField.setText(x);
    }
    
    public void setBillingCountry(String aCountry){
        billingCountryTextField.setText(aCountry);
    }
    
    public void setBillingStates(String aState){
        billingStateTextField.setText(aState);
    }
    
    public void setBillingCity(String aCity){
        billingCityTextField.setText(aCity);
    }
    
    public void setBillingAddress(String anAddress){
        billingAddressTextField.setText(anAddress);
    }
    
    public void setBillingPostalCode(String aPostalCode){
        billingPostalCodeTextField.setText(aPostalCode);
    }
    
    public void setBillingCustNumber(String aCustNumber){
        billingCustNumberTextField.setText(aCustNumber);
    }
    
    public void setBillingEqualProfileCheckBox(boolean x){
        billingEqualProfileCbox.setSelected(x);
    }
    
    public void resetBillingDetails(){
        billingAddressTextField.setText(null);
        billingBillToTextField.setText(null);
        billingCityTextField.setText(null);
        billingCountryTextField.setText(null);
        billingCustNumberTextField.setText(null);
        billingPostalCodeTextField.setText(null);
        billingStateTextField.setText(null);
    }
    
    public void addBillingEqualProfileCheckBoxListener(ItemListener listenSameBillingCheckBox){
        billingEqualProfileCbox.addItemListener(listenSameBillingCheckBox);
    }
    
    
    
    /*
    public void addPrimaryEmailValidator(InputMethodListener emailValidator){
        primaryEmailTextField.addInputMethodListener(emailValidator);
    }
    
    public void addMaterialEmailValidator(InputMethodListener emailValidator){
        materialEmailTextField.addInputMethodListener(emailValidator);
    }

    public class EmailVerifier extends InputVerifier{
            
        @Override
        public boolean verify(JComponent input) {
            boolean value = false;
            try{
                new InternetAddress(((JTextField)input).getText()).validate();
                value = true;
            }
            catch(AddressException ex){
                value = false;
                displayErrorMessage("Email is invalid!");
            }
            finally{
                return value;
            }
        }
    }
    */
    
    
    /**
     * Methods related to order history pane
     */
    //Add methods here
    
    
    
    /**
     * Other methods
     *  
     */      
    public void displayErrorMessage(String message) {
        JOptionPane.showMessageDialog(this, message);
    }
    
    
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel addOrderPane;
    private javax.swing.JLabel billingAddressLabel;
    private javax.swing.JTextField billingAddressTextField;
    private javax.swing.JLabel billingBillToLabel;
    private javax.swing.JTextField billingBillToTextField;
    private javax.swing.JLabel billingCityLabel;
    private javax.swing.JTextField billingCityTextField;
    private javax.swing.JLabel billingCountryLabel;
    private javax.swing.JTextField billingCountryTextField;
    private javax.swing.JLabel billingCustNumberLabel;
    private javax.swing.JTextField billingCustNumberTextField;
    private javax.swing.JCheckBox billingEqualProfileCbox;
    private javax.swing.JPanel billingPane;
    private javax.swing.JLabel billingPostalCodeLabel;
    private javax.swing.JTextField billingPostalCodeTextField;
    private javax.swing.JLabel billingStateLabel;
    private javax.swing.JTextField billingStateTextField;
    private javax.swing.JPanel custProfilePane;
    private javax.swing.JPanel customerProfilePane;
    private javax.swing.JMenu editMenu;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JButton historyCopyPOButton;
    private javax.swing.JButton historyCreatePOButton;
    private javax.swing.JTable historyOrderTable;
    private javax.swing.JScrollPane historyScrollPane;
    private javax.swing.JButton historyViewPOButton;
    private javax.swing.JMenuBar jMenuBar;
    private javax.swing.JTabbedPane mainTabbedPane;
    private javax.swing.JPanel orderHistoryPane;
    private javax.swing.JLabel profileAddressLabel;
    private javax.swing.JTextField profileAddressTextField;
    private javax.swing.JLabel profileCityLabel;
    private javax.swing.JTextField profileCityTextField;
    private javax.swing.JLabel profileCountryLabel;
    private javax.swing.JTextField profileCountryTextField;
    private javax.swing.JLabel profileCustNumLabel;
    private javax.swing.JTextField profileCustNumTextField;
    private javax.swing.JLabel profileFaxLabel;
    private javax.swing.JTextField profileFaxTextField;
    private javax.swing.JLabel profilePhoneLabel;
    private javax.swing.JTextField profilePhoneTextField;
    private javax.swing.JLabel profilePostalCodeLabel;
    private javax.swing.JTextField profilePostalCodeTextField;
    private javax.swing.JLabel profileStateLabel;
    private javax.swing.JTextField profileStateTextField;
    private javax.swing.JSeparator profileViewSeparator;
    private javax.swing.JComboBox schoolComboBox;
    private javax.swing.JLabel schoolDistrictLabel;
    private javax.swing.JTextField schoolDistrictTextField;
    private javax.swing.JLabel schoolLabel;
    private javax.swing.JMenu viewMenu;
    // End of variables declaration//GEN-END:variables

}
